#!/bin/bash -e

# ensure that we have the required dependencies installed
for dep in gofmt gofumpt goimports sponge wget; do
    if ! type -t $dep > /dev/null; then
        echo "Error: '$dep' is not installed" 1>&2
        exit 1
    fi
done

# ensure the 'commit-msg' git hook has been downloaded and is marked as executable (otherwise it will be ignored by Git)
if [[ ! -x .githooks/commit-msg ]]; then
    wget -q -P .githooks/ http://review.couchbase.org/tools/hooks/commit-msg
    chmod +x .githooks/commit-msg
fi

# only modify currently staged Go files
staged_go_files=$(git diff --cached --name-only --diff-filter=d | grep -E '\.*\.go$' || true)

# we didn't edit any Go files in this commit
if [[ ${staged_go_files} == "" ]]; then
    exit 0
fi

# Get the config value that decides whether we write formatting changes; write and stage; or write, stage and commit
# them. If unset, then set config to empty
config=`git config couchbase.tools.format.behaviour` || config=""

# All configs other than error will rewrite the files formatted and with their imports sorted
flags="-w"
if [[ $config == "error" ]]; then
  flags=""
fi

# run gofmt with the simplify flag (this is one of the checks the build bot runs)
gofmt_files=`gofmt -l -s $flags ${staged_go_files}`

# run gofumpt with the extra rules flag
gofumpt_files=`gofumpt -l $flags --extra ${staged_go_files}`

# run goimports to ensure that imports are sorted correctly
darwin_import_files=`env GOOS="darwin" goimports $flags -l -local "github.com/couchbase/tools-common" ${staged_go_files}`
linux_import_files=`env GOOS="linux" goimports $flags -l -local "github.com/couchbase/tools-common" ${staged_go_files}`
windows_import_files=`env GOOS="windows" goimports $flags -l -local "github.com/couchbase/tools-common" ${staged_go_files}`

# concatenate all the files with invalid formatting
touched_files=`echo -e "$gofmt_files\n$gofumpt_files\n$darwin_import_files\n$linux_import_files\n$windows_import_files" | sort | uniq`

if [[ $touched_files == "" ]]; then
    exit 0
fi

case $config in
    (error)
        echo "The following files had formatting or import errors: "
        echo
        echo $touched_files
        echo
        echo "Please fix, review changes, add and commit again"
        exit 1
        ;;
    (fix)
        echo "The follow files had formatting or import errors"
        echo
        echo $touched_files
        echo
        echo "Please review changes, add and commit again"
        exit 1
        ;;
    (stage)
        git add ${staged_go_files}
        echo "The follow files had formatting or import errors"
        echo
        echo $touched_files
        echo
        echo "Please review changes and commit again"
        exit 1
        ;;
    (commit|*)
        git add ${staged_go_files}
        ;;
esac
