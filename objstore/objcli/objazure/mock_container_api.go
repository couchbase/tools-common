// Code generated by mockery v2.9.4. DO NOT EDIT.

package objazure

import (
	context "context"

	azblob "github.com/Azure/azure-storage-blob-go/azblob"

	mock "github.com/stretchr/testify/mock"
)

// mockContainerAPI is an autogenerated mock type for the containerAPI type
type mockContainerAPI struct {
	mock.Mock
}

// ListBlobsFlatSegment provides a mock function with given fields: ctx, marker, o
func (_m *mockContainerAPI) ListBlobsFlatSegment(ctx context.Context, marker azblob.Marker, o azblob.ListBlobsSegmentOptions) (*azblob.ListBlobsFlatSegmentResponse, error) {
	ret := _m.Called(ctx, marker, o)

	var r0 *azblob.ListBlobsFlatSegmentResponse
	if rf, ok := ret.Get(0).(func(context.Context, azblob.Marker, azblob.ListBlobsSegmentOptions) *azblob.ListBlobsFlatSegmentResponse); ok {
		r0 = rf(ctx, marker, o)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*azblob.ListBlobsFlatSegmentResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, azblob.Marker, azblob.ListBlobsSegmentOptions) error); ok {
		r1 = rf(ctx, marker, o)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListBlobsHierarchySegment provides a mock function with given fields: ctx, marker, delimiter, o
func (_m *mockContainerAPI) ListBlobsHierarchySegment(ctx context.Context, marker azblob.Marker, delimiter string, o azblob.ListBlobsSegmentOptions) (*azblob.ListBlobsHierarchySegmentResponse, error) {
	ret := _m.Called(ctx, marker, delimiter, o)

	var r0 *azblob.ListBlobsHierarchySegmentResponse
	if rf, ok := ret.Get(0).(func(context.Context, azblob.Marker, string, azblob.ListBlobsSegmentOptions) *azblob.ListBlobsHierarchySegmentResponse); ok {
		r0 = rf(ctx, marker, delimiter, o)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*azblob.ListBlobsHierarchySegmentResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, azblob.Marker, string, azblob.ListBlobsSegmentOptions) error); ok {
		r1 = rf(ctx, marker, delimiter, o)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ToBlobAPI provides a mock function with given fields: blob
func (_m *mockContainerAPI) ToBlobAPI(blob string) blobAPI {
	ret := _m.Called(blob)

	var r0 blobAPI
	if rf, ok := ret.Get(0).(func(string) blobAPI); ok {
		r0 = rf(blob)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(blobAPI)
		}
	}

	return r0
}
