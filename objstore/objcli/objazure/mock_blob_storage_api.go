// Code generated by mockery v2.10.4. DO NOT EDIT.

package objazure

import mock "github.com/stretchr/testify/mock"

// mockBlobStorageAPI is an autogenerated mock type for the blobStorageAPI type
type mockBlobStorageAPI struct {
	mock.Mock
}

// CanGetSASToken provides a mock function with given fields:
func (_m *mockBlobStorageAPI) CanGetSASToken() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ToBlobAPI provides a mock function with given fields: container, blob
func (_m *mockBlobStorageAPI) ToBlobAPI(container, blob string) (blobAPI, error) {
	ret := _m.Called(container, blob)

	var r0 blobAPI
	if rf, ok := ret.Get(0).(func(string, string) blobAPI); ok {
		r0 = rf(container, blob)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(blobAPI)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(container, blob)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ToContainerAPI provides a mock function with given fields: container
func (_m *mockBlobStorageAPI) ToContainerAPI(container string) (containerAPI, error) {
	ret := _m.Called(container)

	var r0 containerAPI
	if rf, ok := ret.Get(0).(func(string) containerAPI); ok {
		r0 = rf(container)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(containerAPI)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(container)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
