// Code generated by mockery v2.32.0. DO NOT EDIT.

package objgcp

import (
	context "context"

	storage "cloud.google.com/go/storage"
	mock "github.com/stretchr/testify/mock"
)

// mockCopierAPI is an autogenerated mock type for the copierAPI type
type mockCopierAPI struct {
	mock.Mock
}

// Run provides a mock function with given fields: ctx
func (_m *mockCopierAPI) Run(ctx context.Context) (*storage.ObjectAttrs, error) {
	ret := _m.Called(ctx)

	var r0 *storage.ObjectAttrs
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*storage.ObjectAttrs, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *storage.ObjectAttrs); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.ObjectAttrs)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockCopierAPI creates a new instance of mockCopierAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockCopierAPI(t interface {
	mock.TestingT
	Cleanup(func())
},
) *mockCopierAPI {
	mock := &mockCopierAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
