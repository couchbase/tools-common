// Code generated by mockery v2.32.0. DO NOT EDIT.

package objgcp

import mock "github.com/stretchr/testify/mock"

// mockServiceAPI is an autogenerated mock type for the serviceAPI type
type mockServiceAPI struct {
	mock.Mock
}

// Bucket provides a mock function with given fields: name
func (_m *mockServiceAPI) Bucket(name string) bucketAPI {
	ret := _m.Called(name)

	var r0 bucketAPI
	if rf, ok := ret.Get(0).(func(string) bucketAPI); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(bucketAPI)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *mockServiceAPI) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newMockServiceAPI creates a new instance of mockServiceAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockServiceAPI(t interface {
	mock.TestingT
	Cleanup(func())
},
) *mockServiceAPI {
	mock := &mockServiceAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
